plugins {
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'fpt.capstone'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor('org.hibernate:hibernate-jpamodelgen:5.3.7.Final')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation group: 'com.google.apis', name: 'google-api-services-gmail', version: 'v1-rev83-1.23.0'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
    implementation group: 'com.google.api-client', name: 'google-api-client', version: '1.30.4'
    implementation group: 'com.google.oauth-client', name: 'google-oauth-client-jetty', version: '1.23.0'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'
    implementation group: 'com.google.firebase', name: 'firebase-admin', version: '6.8.1'
    compile group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    compile group: 'org.hibernate', name: 'hibernate-validator', version: '6.1.0.Final'
    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.4.17.Final'
    compile group: 'org.hibernate', name: 'hibernate-validator-annotation-processor', version: '6.1.0.Final'
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-bean-validators', version: '2.9.2'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.0'
    compile group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    compile 'com.google.maps:google-maps-services:0.14.0'
    compile group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: '1.2.5.RELEASE'
}


tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file("src/generated/java")
}

//
//sourceSets {
//    generated {
//        java {
//            srcDirs = ['src/generated/java']
//        }
//    }
//}
//task protoTask{
//    sourceSets {
//        main {
//            java {
//                srcDirs 'build/generated/source/proto/main/grpc'
//                srcDirs 'build/generated/source/proto/main/java'
//            }
//        }
//    }
//    protobuf {
//        protoc {
//            // The version of protoc must match protobuf-java. If you don't depend on
//            // protobuf-java directly, you will be transitively depending on the
//            // protobuf-java version that grpc depends on.
//            artifact = "com.google.protobuf:protoc:3.12.0"
//        }
//        plugins {
//            grpc {
//                artifact = 'io.grpc:protoc-gen-grpc-java:1.29.0'
//            }
//        }
//        generateProtoTasks {
//            all()*.plugins {
//                grpc {}
//            }
//        }
//        generatedFilesBaseDir = "$projectDir/src/main/java/generated"
//    }
//}

//test {
//    useJUnitPlatform()
//}
